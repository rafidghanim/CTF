#from Crypto.Util.number import long_to_bytes

def wiener(e, n):
    # Convert e/n into a continued fraction
    cf = continued_fraction(e/n)
    convergents = cf.convergents()
    for kd in convergents:
        k = kd.numerator()
        d = kd.denominator()
        # Check if k and d meet the requirements
        if k == 0 or d%2 == 0 or e*d % k != 1:
            continue
        phi = (e*d - 1)/k
        # Create the polynomial
        x = PolynomialRing(RationalField(), 'x').gen()
        f = x^2 - (n-phi+1)*x + n
        roots = f.roots()
        # Check if polynomial as two roots
        if len(roots) != 2:
            continue
        # Check if roots of the polynomial are p and q
        p,q = int(roots[0][0]), int(roots[1][0])
        if p*q == n:
            return d
    return None
# Test to see if our attack works
if __name__ == '__main__':
    N,e,d = (16288035991834935617012865391660362967224647178325804952999677394467042202052389477457578951241427974720163444845004331664794058208354719762981422576218119656094306991721516667246873017978323764456853744187590641985993099919683438282058735462078630869449371481645488291550042392470203886241727857780717893983754928034827431713840420629932696218733699902497251406560340545225396314668127001560492714233730767719802000035456247359783860892599292017792225183627457444707383827096757891701851584663945906643836097733608571746081869363168134909727230945715522020996978976322554354539403827272006153621270944537486731887403,
 2133330129332709859508875043069434550279120302165063953420981143480725982297026394367310049075938356757445404219043044753158951622845783908655824221927,
 115550273974864925312229677368406946543184403371088474872911023011419246391481530168050377374080256578598479600014334413214239803009662185198842986742663437568049806646184131311150335632178526381497925371120969456459318777461398347751556709299983497166255074277130927048093100603080799957702140846998056625137266286388912328778733163172709725121672254121553561814737147078072095202626225201137132790717176539033561087148905009697926416753711913080063040773393329380478228836039688088897192672022995685450236128665619566750281950834344503303013726847343778175579430771313866745353464681008698752654978933065564766943)

    c = 5928120944877154092488159606792758283490469364444892167942345801713373962617628757053412232636219967675256510422984948872954949616521392542703915478027634
    d = wiener(d,N)
    print(d)
    #assert not d is None, "Wiener's attack failed :("
    #print(long_to_bytes(int(pow(c,d,n))).decode())
